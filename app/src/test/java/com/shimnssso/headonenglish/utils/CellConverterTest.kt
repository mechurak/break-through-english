package com.shimnssso.headonenglish.utils

import com.shimnssso.headonenglish.network.Cell
import com.shimnssso.headonenglish.network.Format
import com.shimnssso.headonenglish.network.TextFormatRun
import com.shimnssso.headonenglish.ui.lecture.CardMode
import org.junit.Assert
import org.junit.Test

class CellConverterTest {
    // {"formattedValue":"seasonal fruits","textFormatRuns":[{"format":{"underline":true}},{"startIndex":3,"format":{}}]}
    private val CELL_JSON_STR =
        "{\"formattedValue\":\"seasonal fruits\",\"textFormatRuns\":[{\"format\":{\"underline\":true}},{\"startIndex\":3,\"format\":{}}]}"
    private val CELL = Cell(
        formattedValue = "seasonal fruits",
        textFormatRuns = listOf(
            TextFormatRun(
                startIndex = null,
                format = Format(underline = true, bold = null, italic = null)
            ),
            TextFormatRun(
                startIndex = 3,
                format = Format(underline = null, bold = null, italic = null)
            )
        ),
        effectiveFormat = null
    )

    private val JSON_STR =
        "{\"formattedValue\":\"Being overweight is [the leading cause of] several chronic illnesses, like heart disease or diabetes.\",\"textFormatRuns\":[{\"format\":{}},{\"startIndex\":25,\"format\":{\"underline\":true}},{\"startIndex\":28,\"format\":{}},{\"startIndex\":43,\"format\":{\"underline\":true}},{\"startIndex\":45,\"format\":{}},{\"startIndex\":51,\"format\":{\"underline\":true}},{\"startIndex\":55,\"format\":{}},{\"startIndex\":59,\"format\":{\"underline\":true}},{\"startIndex\":61,\"format\":{}},{\"startIndex\":83,\"format\":{\"underline\":true}},{\"startIndex\":88,\"format\":{}},{\"startIndex\":95,\"format\":{\"underline\":true}},{\"startIndex\":97,\"format\":{}}]}"

    private val JSON_CELL =
        "{\"formattedValue\":\"The [ROI] could be better if you invest in ETFs.\",\"textFormatRuns\":[{\"format\":{}},{\"startIndex\":5,\"format\":{\"underline\":true}},{\"startIndex\":8,\"format\":{}},{\"startIndex\":19,\"format\":{\"underline\":true}},{\"startIndex\":22,\"format\":{}},{\"startIndex\":35,\"format\":{\"underline\":true}},{\"startIndex\":39,\"format\":{}},{\"startIndex\":43,\"format\":{\"underline\":true}},{\"startIndex\":47,\"format\":{}}]}"

    private val newJsonStr =
        "{\"formattedValue\":\"The air pollution generated by these vehicles can cause a multitude of health problems.\",\"textFormatRuns\":[{\"format\":{\"italic\":true}},{\"format\":{\"bold\":true,\"italic\":true},\"startIndex\":18},{\"format\":{\"italic\":true},\"startIndex\":27},{\"format\":{},\"startIndex\":45},{\"format\":{\"italic\":true},\"startIndex\":50},{\"format\":{\"bold\":true,\"italic\":true,\"underline\":true},\"startIndex\":58},{\"format\":{\"bold\":true,\"italic\":true},\"startIndex\":61},{\"format\":{\"italic\":true},\"startIndex\":67},{\"format\":{},\"startIndex\":86}]}"


    private val JSON_SAMPLE_1 = """
    {
      "effectiveFormat": {
        "textFormat": {
          "bold": true
        }
      },
      "formattedValue": "go vegetarian",
      "textFormatRuns": [
        {
          "format": {
            "underline": true
          }
        },
        {
          "format": {},
          "startIndex": 2
        },
        {
          "format": {
            "underline": true
          },
          "startIndex": 7
        },
        {
          "format": {},
          "startIndex": 9
        }
      ]
    }
    """.trimIndent()

    private val JSON_SAMPLE_2 = """
    {
      "effectiveFormat": {
        "textFormat": {
          "bold": false
        }
      },
      "formattedValue": "Many people are going vegetarian these days.",
      "textFormatRuns": [
        {
          "format": {
            "underline": true
          }
        },
        {
          "format": {},
          "startIndex": 4
        },
        {
          "format": {
            "bold": true,
            "underline": true
          },
          "startIndex": 16
        },
        {
          "format": {
            "bold": true
          },
          "startIndex": 18
        },
        {
          "format": {
            "bold": true,
            "underline": true
          },
          "startIndex": 26
        },
        {
          "format": {
            "bold": true
          },
          "startIndex": 28
        },
        {
          "format": {},
          "startIndex": 32
        },
        {
          "format": {
            "underline": true
          },
          "startIndex": 33
        },
        {
          "format": {},
          "startIndex": 38
        }
      ]
    }
    """.trimIndent()

    @Test
    fun toJsonTest() {
        val cellStr = CellConverter.toJsonStr(CELL)
        println(cellStr)
        Assert.assertEquals(CELL_JSON_STR, cellStr)
    }

    @Test
    fun fromJsonTest() {
        val cell = CellConverter.fromJson(CELL_JSON_STR)
        println(cell)
        // {"formattedValue":"seasonal fruits","textFormatRuns":[{"format":{"underline":true}},{"startIndex":3,"format":{}}]}
        Assert.assertEquals(cell, CELL)
    }

    @Test
    fun testFromJson_P01() {
        val cell = CellConverter.fromJson(JSON_SAMPLE_1)
        println(cell)
        var prevStartIndex: Int? = null
        var prevBold = false
        var prevItalic = false
        var prevUnderline = false
        for (textFormat in cell.textFormatRuns!!) {
            if (prevStartIndex != textFormat.startIndex) {
                print(
                    "\"${
                        cell.formattedValue!!.substring(
                            prevStartIndex!!,
                            textFormat.startIndex!!
                        )
                    }\" "
                )
                if (prevBold) print(" bold")
                if (prevItalic) print(" italic")
                if (prevUnderline) print(" underline")
                println()
            }
            prevStartIndex = textFormat.startIndex ?: 0
            prevBold = textFormat.format.bold == true
            prevItalic = textFormat.format.italic == true
            prevUnderline = textFormat.format.underline == true
        }

        print("${cell.formattedValue!!.substring(prevStartIndex!!)} ")
        if (prevBold) print(" bold")
        if (prevItalic) print(" italic")
        if (prevUnderline) print(" underline")
        println()
    }

    @Test
    fun getStyleListTest() {
        val cell = CellConverter.fromJson(newJsonStr)
        val (text, retList) = CellConverter.getStyleItemPair(cell, CardMode.Default)
        println("text: $text")
        for (item in retList) {
            println(
                "[${item.start}:${item.end}) \"${
                    text.substring(
                        item.start,
                        item.end
                    )
                }\" ${item.spanStyle!!.background}"
            )
        }
    }

    @Test
    fun getQuizAnswerPair() {
        val cell = CellConverter.fromJson(JSON_SAMPLE_2)
        val retList = CellConverter.getQuizAnswerPair(cell)
        println(retList)

    }
}